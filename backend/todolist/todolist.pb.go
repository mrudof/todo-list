// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todolist.proto

/*
Package todolist is a generated protocol buffer package.

It is generated from these files:
	todolist.proto

It has these top-level messages:
	Todo
*/
package todolist

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Todo struct {
	Id      int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	DueDate string `protobuf:"bytes,3,opt,name=due_date,json=dueDate" json:"due_date,omitempty"`
	Owner   string `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
}

func (m *Todo) Reset()                    { *m = Todo{} }
func (m *Todo) String() string            { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()               {}
func (*Todo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Todo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Todo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Todo) GetDueDate() string {
	if m != nil {
		return m.DueDate
	}
	return ""
}

func (m *Todo) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func init() {
	proto.RegisterType((*Todo)(nil), "todolist.Todo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TodoList service

type TodoListClient interface {
	ListTodos(ctx context.Context, in *Todo, opts ...grpc.CallOption) (TodoList_ListTodosClient, error)
}

type todoListClient struct {
	cc *grpc.ClientConn
}

func NewTodoListClient(cc *grpc.ClientConn) TodoListClient {
	return &todoListClient{cc}
}

func (c *todoListClient) ListTodos(ctx context.Context, in *Todo, opts ...grpc.CallOption) (TodoList_ListTodosClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_TodoList_serviceDesc.Streams[0], c.cc, "/todolist.TodoList/ListTodos", opts...)
	if err != nil {
		return nil, err
	}
	x := &todoListListTodosClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TodoList_ListTodosClient interface {
	Recv() (*Todo, error)
	grpc.ClientStream
}

type todoListListTodosClient struct {
	grpc.ClientStream
}

func (x *todoListListTodosClient) Recv() (*Todo, error) {
	m := new(Todo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for TodoList service

type TodoListServer interface {
	ListTodos(*Todo, TodoList_ListTodosServer) error
}

func RegisterTodoListServer(s *grpc.Server, srv TodoListServer) {
	s.RegisterService(&_TodoList_serviceDesc, srv)
}

func _TodoList_ListTodos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Todo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TodoListServer).ListTodos(m, &todoListListTodosServer{stream})
}

type TodoList_ListTodosServer interface {
	Send(*Todo) error
	grpc.ServerStream
}

type todoListListTodosServer struct {
	grpc.ServerStream
}

func (x *todoListListTodosServer) Send(m *Todo) error {
	return x.ServerStream.SendMsg(m)
}

var _TodoList_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todolist.TodoList",
	HandlerType: (*TodoListServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListTodos",
			Handler:       _TodoList_ListTodos_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "todolist.proto",
}

func init() { proto.RegisterFile("todolist.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0xc9, 0x4f, 0xc9,
	0xcf, 0xc9, 0x2c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0xa5, 0x64,
	0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b,
	0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xea, 0x94, 0x62, 0xb9, 0x58, 0x42, 0xf2, 0x53, 0xf2,
	0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x98, 0x32, 0x53,
	0x84, 0x44, 0xb8, 0x58, 0x4b, 0x32, 0x4b, 0x72, 0x52, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83,
	0x20, 0x1c, 0x21, 0x49, 0x2e, 0x8e, 0x94, 0xd2, 0xd4, 0xf8, 0x94, 0xc4, 0x92, 0x54, 0x09, 0x66,
	0xb0, 0x04, 0x7b, 0x4a, 0x69, 0xaa, 0x4b, 0x62, 0x49, 0x2a, 0x48, 0x43, 0x7e, 0x79, 0x5e, 0x6a,
	0x91, 0x04, 0x0b, 0x44, 0x03, 0x98, 0x63, 0x14, 0xc8, 0xc5, 0x01, 0x32, 0xde, 0x27, 0xb3, 0xb8,
	0x44, 0xc8, 0x95, 0x8b, 0x13, 0x44, 0x83, 0xf8, 0xc5, 0x42, 0x7c, 0x7a, 0x70, 0x07, 0x83, 0x04,
	0xa4, 0xd0, 0xf8, 0x4a, 0x62, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x12, 0x10, 0xe2, 0x03, 0xbb, 0x1b,
	0x24, 0xa7, 0x0f, 0x92, 0x34, 0x60, 0x4c, 0x62, 0x03, 0x3b, 0xdc, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0x42, 0xe7, 0x25, 0xa6, 0xf2, 0x00, 0x00, 0x00,
}
