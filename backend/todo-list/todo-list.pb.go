// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo-list.proto

/*
Package todolist is a generated protocol buffer package.

It is generated from these files:
	todo-list.proto

It has these top-level messages:
	TodoRequest
	TodoReply
*/
package todolist

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TodoRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *TodoRequest) Reset()                    { *m = TodoRequest{} }
func (m *TodoRequest) String() string            { return proto.CompactTextString(m) }
func (*TodoRequest) ProtoMessage()               {}
func (*TodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TodoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TodoReply struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *TodoReply) Reset()                    { *m = TodoReply{} }
func (m *TodoReply) String() string            { return proto.CompactTextString(m) }
func (*TodoReply) ProtoMessage()               {}
func (*TodoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TodoReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*TodoRequest)(nil), "todolist.TodoRequest")
	proto.RegisterType((*TodoReply)(nil), "todolist.TodoReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TodoList service

type TodoListClient interface {
	AddTodo(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoReply, error)
}

type todoListClient struct {
	cc *grpc.ClientConn
}

func NewTodoListClient(cc *grpc.ClientConn) TodoListClient {
	return &todoListClient{cc}
}

func (c *todoListClient) AddTodo(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoReply, error) {
	out := new(TodoReply)
	err := grpc.Invoke(ctx, "/todolist.TodoList/AddTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TodoList service

type TodoListServer interface {
	AddTodo(context.Context, *TodoRequest) (*TodoReply, error)
}

func RegisterTodoListServer(s *grpc.Server, srv TodoListServer) {
	s.RegisterService(&_TodoList_serviceDesc, srv)
}

func _TodoList_AddTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoListServer).AddTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todolist.TodoList/AddTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoListServer).AddTodo(ctx, req.(*TodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoList_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todolist.TodoList",
	HandlerType: (*TodoListServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTodo",
			Handler:    _TodoList_AddTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo-list.proto",
}

func init() { proto.RegisterFile("todo-list.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xc9, 0x4f, 0xc9,
	0xd7, 0xcd, 0xc9, 0x2c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x09, 0x80,
	0xf8, 0x4a, 0x8a, 0x5c, 0xdc, 0x21, 0xf9, 0x29, 0xf9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25,
	0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60,
	0xb6, 0x92, 0x3c, 0x17, 0x27, 0x44, 0x49, 0x41, 0x4e, 0x25, 0x36, 0x05, 0x46, 0xce, 0x5c, 0x1c,
	0x20, 0x05, 0x3e, 0x99, 0xc5, 0x25, 0x42, 0xe6, 0x5c, 0xec, 0x8e, 0x29, 0x29, 0x20, 0xae, 0x90,
	0xa8, 0x1e, 0xcc, 0x16, 0x3d, 0x24, 0x2b, 0xa4, 0x84, 0xd1, 0x85, 0x0b, 0x72, 0x2a, 0x95, 0x18,
	0x9c, 0x54, 0xb9, 0x84, 0x32, 0xf3, 0xf5, 0x32, 0x73, 0x53, 0x2b, 0x53, 0x8b, 0xe0, 0x2a, 0x9c,
	0x78, 0x61, 0x06, 0x07, 0x80, 0xdc, 0x1d, 0xc0, 0x98, 0xc4, 0x06, 0xf6, 0x80, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x58, 0x0e, 0xcb, 0x37, 0xd3, 0x00, 0x00, 0x00,
}
